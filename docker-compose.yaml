
services:
  openvpn-as:
    #Trouver le mdp de base : docker logs openvpn-as | grep 'Auto-generated pass'
    #Access Server : https://120.0.33.23:943/admin
    #Il faut d'abord vérifier que le serveur fonctionne bien avec la commande : docker logs -f openvpn-as
    #ID admin: openvpn et le mdp: celui trouvé avant
    #Tester avec le mdp : projetinterco 
    #Ce mdp fonctionne si ma config est ok 
    # IMPORTANT: Si on le mets dans le réseau DMZ, il ne fonctionne pas. Car le réseau DMZ est en macvlan et non en bridge.
    # Si il n'y a pas le volume de créer : mkdir -p ~/openvpn/data
  
    image: openvpn/openvpn-as
    container_name: openvpn-as 
    privileged : true
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - MKNOD

    networks:
      Reseau_DMZ:
        ipv4_address: 120.0.33.23
    volumes:
      - "./openvpn/data:/etc/openvpn"
    restart: always

  database:
    image: mysql:latest
    container_name: database
    environment:
        MYSQL_ROOT_PASSWORD: admin
        MYSQL_DATABASE: Coordonnees
    networks:
        reseau_Prive:
          ipv4_address: 192.168.1.12
    ports: 
        - "3306:3306"
    volumes:
      - ./mysql-data:/var/lib/mysql       
      - ./initdb:/docker-entrypoint-initdb.d 

  serveur-web-entreprise:
    image: nginx
    privileged: true
    networks:
      Reseau_DMZ:
        ipv4_address: 120.0.33.22
    container_name: serveur_web_entreprise

  serveur-web:
    image: nginx
    privileged: true
    container_name: serveur_web
    networks:
      Reseau_services_FAI:
        ipv4_address: 120.0.38.8
  box:
    image: 3x3cut0r/isc-dhcp-server:latest # image dhcp
    restart: always
    privileged: true
    command: tail -f /dev/null
    networks:
      particuliers:
        ipv4_address: 120.0.34.2
      reseau_Prive:
        ipv4_address: 192.168.1.2
    ports:
      - "67:67/udp"   # Expose le port pour dhcp
    volumes:
      - ./dhcpd.conf:/etc/dhcp/dhcpd.conf   
    tty: true   
    stdin_open: true
    container_name: box_particulier

  routeur-particuliers:
      build : image-routeur-particuliers
      restart: always
      privileged: true
      command: tail -f /dev/null
      networks:
        particuliers:
          ipv4_address: 120.0.34.5
        Reseau_Coeur:
          ipv4_address: 120.0.40.5
      container_name: Routeur_acces_particuliers


  routeur-services-fai:
      build: image-routeur-services-fai
      restart: always
      privileged: true
      command: tail -f /dev/null
      networks:
        Reseau_services_FAI:
          ipv4_address: 120.0.38.3
        Reseau_Coeur:
          ipv4_address: 120.0.40.3
      container_name: Routeur_services_FAI  

  
  dns-global:
      build: dns-global
      privileged: true
      networks:
        Reseau_services_FAI:
          ipv4_address: 120.0.38.5
      
      container_name: serveur_dns
  dns-entreprise:
      build: dns-entreprise
      privileged: true
      networks:
        Reseau_DMZ:
          ipv4_address: 120.0.33.21
      
      container_name: serveur_dns_entreprise
  
  
  #particuliers FAI
  clientparticulier:
      image: debian
      restart: always
      privileged: true
      command: tail -f /dev/null

      stdin_open: 
        true
      networks:
        reseau_Prive:
          ipv4_address: 192.168.1.3
      container_name: particulier
  
  clientparticulier2:
      image: ubuntu:20.04
      restart: always
      privileged: true
      command: tail -f /dev/null
      environment:
        DISPLAY: host.docker.internal:0.0
      stdin_open: 
        true
      networks:
        reseau_Prive:
          ipv4_address: 192.168.1.4
      container_name: particulier2





  routeur-acces-entreprises:
      build : image-routeur-acces-entreprises
      restart: always
      privileged: true
      command: tail -f /dev/null
      networks:
        Reseau_Coeur:
          ipv4_address: 120.0.40.4
        Reseau_acces_entreprises:
          ipv4_address: 120.0.32.4
      container_name: Routeur_acces_entreprises


  #containers entreprise
  routeur-entreprise-site-principal:
      build : image-routeur-Entreprise-site-principal
      restart: always
      privileged: true
      command: tail -f /dev/null 
      networks:
        Reseau_acces_entreprises:
          ipv4_address: 120.0.32.3
        Reseau_DMZ:
          ipv4_address: 120.0.33.18
        Reseau_entreprise_bureaux:
          ipv4_address: 120.0.42.2
      container_name: Routeur_entreprise_site_principal
  
  routeur-entreprise-bureau-administratif:
      image:  3x3cut0r/isc-dhcp-server:latest # image dhcp
      restart: always
      privileged: true
      command: tail -f /dev/null 
      networks:
        Reseau_PriveAdministratif:
          ipv4_address: 192.168.2.2
        Reseau_entreprise_bureaux:
          ipv4_address: 120.0.42.3
      container_name: Routeur_bureau_administratif

  routeur-entreprise-bureau-technique:
      image :  3x3cut0r/isc-dhcp-server:latest # image dhcp
      restart: always
      privileged: true
      command: tail -f /dev/null 
      networks:
        Reseau_PriveTechnique:
          ipv4_address: 192.168.3.2
        Reseau_entreprise_bureaux:
          ipv4_address: 120.0.42.4
      container_name: Routeur_bureau_technique
  
 
  
  employe-administratif:
      image: ubuntu:20.04
      restart: always
      privileged: true
      command: tail -f /dev/null
      environment:
        DISPLAY: host.docker.internal:0.0
      stdin_open: 
        true
      networks:
        Reseau_PriveAdministratif:
          ipv4_address: 192.168.2.5
      container_name: employe_administartif
  
  employe-technique:
      image: ubuntu:20.04
      restart: always
      privileged: true
      command: tail -f /dev/null
      environment:
        DISPLAY: host.docker.internal:0.0
      stdin_open: 
        true
      networks:
        Reseau_PriveTechnique:
          ipv4_address: 192.168.3.3
      container_name: employe_technique

  routeur-interco : 
      build : image-routeur-interco
      restart: always
      privileged: true
      command: tail -f /dev/null 
      networks:
        Reseau_acces_entreprises_2:
          ipv4_address: 120.0.44.2
        Reseau_Coeur:
          ipv4_address: 120.0.40.2
        
      container_name: Routeur_interco
  
  #deuxieme site
  routeur-entreprise-site-2 : 
      image :  3x3cut0r/isc-dhcp-server:latest # image dhcp
      restart: always
      privileged: true
      command: tail -f /dev/null 
      networks:
        Reseau_acces_entreprises_2:
          ipv4_address: 120.0.44.3
        Reseau_prive_entreprise_2:
          ipv4_address: 192.168.10.2
      container_name: Routeur_entreprise_site_2
  
  
  employe-site-2:
      image: ubuntu:20.04
      restart: always
      privileged: true
      command: tail -f /dev/null
      environment:
        DISPLAY: host.docker.internal:0.0
      stdin_open: 
        true
      networks:
        Reseau_prive_entreprise_2:
          ipv4_address: 192.168.10.3
      container_name: employe_site_2


  serveu-voip:
    build: mumble-docker-master
    container_name: serveur-voip
    cap_add:
      - NET_ADMIN
    security_opt:
      - seccomp=unconfined
    privileged: true

    networks:
      Reseau_DMZ:
        ipv4_address: 120.0.33.20

    
#reseaux
networks:
  particuliers:
   
    ipam:
      driver: default
      config:
        - subnet: "120.0.34.0/23"
  
  reseau_Prive:
    
    ipam:
      driver: default
      config:
        - subnet: "192.168.1.0/24"
  
  Reseau_Coeur:
    
    ipam:
      driver: default
      config:
        - subnet: "120.0.40.0/27"

  Reseau_acces_entreprises:
    
    ipam:
      driver: default
      config:
        - subnet: "120.0.32.0/24"
 
  Reseau_DMZ:
    
    ipam:
      driver: default
      config:
        - subnet: "120.0.33.0/27"
  
   
  Reseau_services_FAI:
    
    ipam:
      driver: default
      config:
        - subnet: "120.0.38.0/27"

  Reseau_entreprise_bureaux:
    
    ipam:
      driver: default
      config:
        - subnet: "120.0.42.0/27"

  Reseau_PriveAdministratif:
    ipam:
      driver: default
      config:
        - subnet: "192.168.2.0/24"

  Reseau_PriveTechnique:

    ipam:
      driver: default
      config:
        - subnet: "192.168.3.0/24"


  Reseau_acces_entreprises_2:
    
    ipam:
      driver: default
      config:
        - subnet: "120.0.44.0/27"

  Reseau_prive_entreprise_2:
     ipam:
      driver: default
      config:
        - subnet: "192.168.10.0/24"
